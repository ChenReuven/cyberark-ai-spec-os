"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[964],{2037:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"installation/manual","title":"Manual Installation","description":"Prefer full control over your installation? Follow these step-by-step instructions to manually install CyberArk Agentic Spec Driven Development. This approach works for both greenfield (new) and brownfield (existing) projects.","source":"@site/docs/installation/manual.md","sourceDirName":"installation","slug":"/installation/manual","permalink":"/cyberark-ai-spec-os/docs/installation/manual","draft":false,"unlisted":false,"editUrl":"https://github.com/ChenReuven/cyberark-ai-spec-os/tree/add-docuzarus/docs-website/docs/installation/manual.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Quick Installation Guide","permalink":"/cyberark-ai-spec-os/docs/installation/quick-start"},"next":{"title":"Team Installation","permalink":"/cyberark-ai-spec-os/docs/installation/team-setup"}}');var t=n(4848),a=n(8453);const c={sidebar_position:3},o="Manual Installation",i={},l=[{value:"Base Installation (Manual)",id:"base-installation-manual",level:2},{value:"Step 1: Create Directory Structure",id:"step-1-create-directory-structure",level:3},{value:"Step 2: Download Standards Files",id:"step-2-download-standards-files",level:3},{value:"Core Standards Files",id:"core-standards-files",level:4},{value:"Language-Specific Style Guides",id:"language-specific-style-guides",level:4},{value:"Step 3: Download Instructions Files",id:"step-3-download-instructions-files",level:3},{value:"Core Instructions",id:"core-instructions",level:4},{value:"Meta Instructions",id:"meta-instructions",level:4},{value:"Step 4: Download Commands",id:"step-4-download-commands",level:3},{value:"Step 5: Create Configuration",id:"step-5-create-configuration",level:3},{value:"Step 6: Create Project Installation Script",id:"step-6-create-project-installation-script",level:3},{value:"Project Installation (Manual)",id:"project-installation-manual",level:2},{value:"Navigate to Your Project",id:"navigate-to-your-project",level:3},{value:"Run the Project Installation",id:"run-the-project-installation",level:3},{value:"Tool-Specific Setup",id:"tool-specific-setup",level:2},{value:"For Claude Code Users",id:"for-claude-code-users",level:3},{value:"For Cursor Users",id:"for-cursor-users",level:3},{value:"Verification",id:"verification",level:2},{value:"Updating Your Installation",id:"updating-your-installation",level:2},{value:"Update Base Installation",id:"update-base-installation",level:3},{value:"Update Project Installation",id:"update-project-installation",level:3},{value:"Customization",id:"customization",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"manual-installation",children:"Manual Installation"})}),"\n",(0,t.jsx)(s.p,{children:"Prefer full control over your installation? Follow these step-by-step instructions to manually install CyberArk Agentic Spec Driven Development. This approach works for both greenfield (new) and brownfield (existing) projects."}),"\n",(0,t.jsx)(s.h2,{id:"base-installation-manual",children:"Base Installation (Manual)"}),"\n",(0,t.jsx)(s.h3,{id:"step-1-create-directory-structure",children:"Step 1: Create Directory Structure"}),"\n",(0,t.jsx)(s.p,{children:"Create the master CyberArk Agentic Spec Driven Development directories:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"mkdir -p ~/.cyberark-spec-os/standards/code-style\nmkdir -p ~/.cyberark-spec-os/instructions/core\nmkdir -p ~/.cyberark-spec-os/instructions/meta\nmkdir -p ~/.cyberark-spec-os/commands\nmkdir -p ~/.cyberark-spec-os/setup\n"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note:"})," The ",(0,t.jsx)(s.code,{children:"~/"})," refers to your home directory:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Mac/Linux"}),": ",(0,t.jsx)(s.code,{children:"/Users/yourusername/"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Windows"}),": ",(0,t.jsx)(s.code,{children:"C:\\Users\\yourusername\\"})," (or use ",(0,t.jsx)(s.code,{children:"%USERPROFILE%"})," in Command Prompt)"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"step-2-download-standards-files",children:"Step 2: Download Standards Files"}),"\n",(0,t.jsxs)(s.p,{children:["Copy the standards files to ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/standards/"}),":"]}),"\n",(0,t.jsx)(s.h4,{id:"core-standards-files",children:"Core Standards Files"}),"\n",(0,t.jsxs)(s.p,{children:["Create ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/standards/tech-stack.md"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -o ~/.cyberark-spec-os/standards/tech-stack.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/standards/tech-stack.md\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Create ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/standards/code-style.md"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -o ~/.cyberark-spec-os/standards/code-style.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/standards/code-style.md\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Create ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/standards/best-practices.md"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -o ~/.cyberark-spec-os/standards/best-practices.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/standards/best-practices.md\n"})}),"\n",(0,t.jsx)(s.h4,{id:"language-specific-style-guides",children:"Language-Specific Style Guides"}),"\n",(0,t.jsxs)(s.p,{children:["Download to ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/standards/code-style/"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# HTML style guide\ncurl -o ~/.cyberark-spec-os/standards/code-style/html-style.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/standards/code-style/html-style.md\n\n# CSS style guide  \ncurl -o ~/.cyberark-spec-os/standards/code-style/css-style.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/standards/code-style/css-style.md\n\n# JavaScript style guide\ncurl -o ~/.cyberark-spec-os/standards/code-style/javascript-style.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/standards/code-style/javascript-style.md\n"})}),"\n",(0,t.jsx)(s.h3,{id:"step-3-download-instructions-files",children:"Step 3: Download Instructions Files"}),"\n",(0,t.jsxs)(s.p,{children:["Copy the instruction files to ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/instructions/"}),":"]}),"\n",(0,t.jsx)(s.h4,{id:"core-instructions",children:"Core Instructions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# Core workflow instructions\ncurl -o ~/.cyberark-spec-os/instructions/core/plan-product.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/instructions/core/plan-product.md\n\ncurl -o ~/.cyberark-spec-os/instructions/core/create-spec.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/instructions/core/create-spec.md\n\ncurl -o ~/.cyberark-spec-os/instructions/core/execute-tasks.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/instructions/core/execute-tasks.md\n\ncurl -o ~/.cyberark-spec-os/instructions/core/execute-task.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/instructions/core/execute-task.md\n\ncurl -o ~/.cyberark-spec-os/instructions/core/analyze-product.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/instructions/core/analyze-product.md\n"})}),"\n",(0,t.jsx)(s.h4,{id:"meta-instructions",children:"Meta Instructions"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -o ~/.cyberark-spec-os/instructions/meta/pre-flight.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/instructions/meta/pre-flight.md\n\ncurl -o ~/.cyberark-spec-os/instructions/meta/post-flight.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/instructions/meta/post-flight.md\n"})}),"\n",(0,t.jsx)(s.h3,{id:"step-4-download-commands",children:"Step 4: Download Commands"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"curl -o ~/.cyberark-spec-os/commands/analyze-product.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/commands/analyze-product.md\n\ncurl -o ~/.cyberark-spec-os/commands/create-spec.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/commands/create-spec.md\n\ncurl -o ~/.cyberark-spec-os/commands/execute-tasks.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/commands/execute-tasks.md\n\ncurl -o ~/.cyberark-spec-os/commands/plan-product.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/commands/plan-product.md\n"})}),"\n",(0,t.jsx)(s.h3,{id:"step-5-create-configuration",children:"Step 5: Create Configuration"}),"\n",(0,t.jsxs)(s.p,{children:["Create ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/config.yml"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'version: "1.0.0"\ninstallation_type: "manual"\ninstalled_date: "$(date -u +%Y-%m-%dT%H:%M:%SZ)"\ntools:\n  - claude-code  # Add if you use Claude Code\n  - cursor       # Add if you use Cursor\nbase_path: "~/.cyberark-spec-os"\n'})}),"\n",(0,t.jsx)(s.h3,{id:"step-6-create-project-installation-script",children:"Step 6: Create Project Installation Script"}),"\n",(0,t.jsxs)(s.p,{children:["Create ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/setup/project.sh"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'cat > ~/.cyberark-spec-os/setup/project.sh << \'EOF\'\n#!/bin/bash\n\n# CyberArk Agentic Spec Driven Development Project Installation Script\n\nset -e\n\nPROJECT_DIR="$(pwd)"\nBASE_DIR="$HOME/.cyberark-spec-os"\n\necho "Installing CyberArk Agentic Spec Driven Development into project: $PROJECT_DIR"\n\n# Create project directory structure\nmkdir -p .cyberark-spec-os/product\nmkdir -p .cyberark-spec-os/specs\nmkdir -p .cyberark-spec-os/standards\n\n# Copy base standards (can be overridden locally)\nif [ -d "$BASE_DIR/standards" ]; then\n    cp -r "$BASE_DIR/standards/"* .cyberark-spec-os/standards/\nfi\n\n# Create initial product documentation\ncat > .cyberark-spec-os/product/mission.md << \'MISSION\'\n# Product Mission\n\n## What We\'re Building\n[Describe what you\'re building, for whom, and why it matters]\n\n## Target Users\n[Define your primary users and their needs]\n\n## Success Criteria\n[How will you measure success?]\n\n## Constraints\n[Technical, business, or other constraints to consider]\nMISSION\n\ncat > .cyberark-spec-os/product/roadmap.md << \'ROADMAP\'\n# Product Roadmap\n\n## Shipped Features\n- [List completed features]\n\n## In Progress\n- [Current work items]\n\n## Planned\n- [Upcoming features and enhancements]\n\n## Ideas / Backlog\n- [Future possibilities and ideas]\nROADMAP\n\ncat > .cyberark-spec-os/product/decisions.md << \'DECISIONS\'\n# Architectural Decisions\n\n## Decision Log\n\n### [Decision Title]\n**Date:** [YYYY-MM-DD]\n**Status:** [Accepted/Rejected/Superseded]\n**Context:** [What situation prompted this decision?]\n**Decision:** [What did we decide?]\n**Rationale:** [Why did we make this choice?]\n**Consequences:** [What are the implications?]\nDECISIONS\n\n# Create local config\ncat > .cyberark-spec-os/config.yml << CONFIG\nproject_name: "$(basename "$PROJECT_DIR")"\ninstallation_date: "$(date -u +%Y-%m-%dT%H:%M:%SZ)"\nbase_installation: "$BASE_DIR"\nCONFIG\n\necho "\u2705 CyberArk Agentic Spec Driven Development installed successfully!"\necho "\ud83d\udcc1 Project files created in .cyberark-spec-os/"\necho "\ud83d\udcda Next: Review and customize your standards in .cyberark-spec-os/standards/"\nEOF\n\nchmod +x ~/.cyberark-spec-os/setup/project.sh\n'})}),"\n",(0,t.jsx)(s.h2,{id:"project-installation-manual",children:"Project Installation (Manual)"}),"\n",(0,t.jsx)(s.h3,{id:"navigate-to-your-project",children:"Navigate to Your Project"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"cd /path/to/your/project\n"})}),"\n",(0,t.jsx)(s.h3,{id:"run-the-project-installation",children:"Run the Project Installation"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"~/.cyberark-spec-os/setup/project.sh\n"})}),"\n",(0,t.jsx)(s.p,{children:"Or manually create the project structure:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# Create project directory structure\nmkdir -p .cyberark-spec-os/product\nmkdir -p .cyberark-spec-os/specs\nmkdir -p .cyberark-spec-os/standards\n\n# Copy standards from base installation\ncp -r ~/.cyberark-spec-os/standards/* .cyberark-spec-os/standards/\n\n# Create initial product documentation templates\n# (See the script above for template content)\n"})}),"\n",(0,t.jsx)(s.h2,{id:"tool-specific-setup",children:"Tool-Specific Setup"}),"\n",(0,t.jsx)(s.h3,{id:"for-claude-code-users",children:"For Claude Code Users"}),"\n",(0,t.jsx)(s.p,{children:"If using Claude Code, create additional agent files:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"mkdir -p ~/.cyberark-spec-os/claude-code/agents\n\n# Download agent configurations\ncurl -o ~/.cyberark-spec-os/claude-code/agents/context-fetcher.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/claude-code/agents/context-fetcher.md\n\ncurl -o ~/.cyberark-spec-os/claude-code/agents/date-checker.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/claude-code/agents/date-checker.md\n\ncurl -o ~/.cyberark-spec-os/claude-code/agents/file-creator.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/claude-code/agents/file-creator.md\n\ncurl -o ~/.cyberark-spec-os/claude-code/agents/git-workflow.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/claude-code/agents/git-workflow.md\n\ncurl -o ~/.cyberark-spec-os/claude-code/agents/test-runner.md \\\n  https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/claude-code/agents/test-runner.md\n"})}),"\n",(0,t.jsx)(s.h3,{id:"for-cursor-users",children:"For Cursor Users"}),"\n",(0,t.jsx)(s.p,{children:"Cursor integration works automatically with the base installation. No additional setup required."}),"\n",(0,t.jsx)(s.h2,{id:"verification",children:"Verification"}),"\n",(0,t.jsx)(s.p,{children:"Verify your manual installation:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# Check base installation\nls -la ~/.cyberark-spec-os/\nls -la ~/.cyberark-spec-os/standards/\nls -la ~/.cyberark-spec-os/instructions/\nls -la ~/.cyberark-spec-os/commands/\n\n# Check project installation (from project directory)\nls -la .cyberark-spec-os/\nls -la .cyberark-spec-os/product/\nls -la .cyberark-spec-os/standards/\n"})}),"\n",(0,t.jsx)(s.h2,{id:"updating-your-installation",children:"Updating Your Installation"}),"\n",(0,t.jsx)(s.p,{children:"To update your manually installed CyberArk Agentic Spec Driven Development:"}),"\n",(0,t.jsx)(s.h3,{id:"update-base-installation",children:"Update Base Installation"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# Backup current configuration\ncp ~/.cyberark-spec-os/config.yml ~/.cyberark-spec-os/config.yml.backup\n\n# Re-download files (this will overwrite existing files)\n# Follow Steps 2-4 above\n\n# Restore your configuration if needed\n"})}),"\n",(0,t.jsx)(s.h3,{id:"update-project-installation",children:"Update Project Installation"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"# From your project directory\n~/.cyberark-spec-os/setup/project.sh\n"})}),"\n",(0,t.jsx)(s.h2,{id:"customization",children:"Customization"}),"\n",(0,t.jsx)(s.p,{children:"After manual installation, you can customize:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Standards files"})," in ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/standards/"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Instructions"})," in ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/instructions/"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Project templates"})," by modifying the setup script"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Workflow commands"})," in ",(0,t.jsx)(s.code,{children:"~/.cyberark-spec-os/commands/"})]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Configure your standards to match your preferences"}),"\n",(0,t.jsx)(s.li,{children:"Set up your first project with CyberArk Agentic Spec Driven Development"}),"\n",(0,t.jsx)(s.li,{children:"Learn the core development workflows"}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var r=n(6540);const t={},a=r.createContext(t);function c(e){const s=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);