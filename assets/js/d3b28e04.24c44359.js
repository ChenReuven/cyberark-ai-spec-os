"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[101],{8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const o={},r=i.createContext(o);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},9959:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>t});const i=JSON.parse('{"id":"installation/troubleshooting","title":"Installation Troubleshooting","description":"Having issues with your CyberArk Agentic Spec Driven Development installation? This guide covers common problems and their solutions.","source":"@site/docs/installation/troubleshooting.md","sourceDirName":"installation","slug":"/installation/troubleshooting","permalink":"/cyberark-ai-spec-os/docs/installation/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/ChenReuven/cyberark-ai-spec-os/tree/add-docuzarus/docs-website/docs/installation/troubleshooting.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Team Installation","permalink":"/cyberark-ai-spec-os/docs/installation/team-setup"},"next":{"title":"Features","permalink":"/cyberark-ai-spec-os/docs/category/features"}}');var o=s(4848),r=s(8453);const l={sidebar_position:5},c="Installation Troubleshooting",a={},t=[{value:"Common Installation Issues",id:"common-installation-issues",level:2},{value:"Permission Errors",id:"permission-errors",level:3},{value:"Problem: <code>Permission denied</code> when running installation scripts",id:"problem-permission-denied-when-running-installation-scripts",level:4},{value:"Solutions:",id:"solutions",level:4},{value:"Network and Download Issues",id:"network-and-download-issues",level:3},{value:"Problem: <code>curl: command not found</code> or download failures",id:"problem-curl-command-not-found-or-download-failures",level:4},{value:"Problem: SSL certificate verification fails",id:"problem-ssl-certificate-verification-fails",level:4},{value:"Problem: GitHub API rate limiting",id:"problem-github-api-rate-limiting",level:4},{value:"Path and Environment Issues",id:"path-and-environment-issues",level:3},{value:"Problem: <code>~/.cyberark-spec-os</code> not found or path issues",id:"problem-cyberark-spec-os-not-found-or-path-issues",level:4},{value:"Problem: Command not found after installation",id:"problem-command-not-found-after-installation",level:4},{value:"Git and Repository Issues",id:"git-and-repository-issues",level:3},{value:"Problem: Git not installed or configured",id:"problem-git-not-installed-or-configured",level:4},{value:"Problem: Repository access issues",id:"problem-repository-access-issues",level:4},{value:"File System Issues",id:"file-system-issues",level:3},{value:"Problem: Disk space insufficient",id:"problem-disk-space-insufficient",level:4},{value:"Problem: File conflicts or corruption",id:"problem-file-conflicts-or-corruption",level:4},{value:"Platform-Specific Issues",id:"platform-specific-issues",level:2},{value:"macOS Issues",id:"macos-issues",level:3},{value:"Problem: Gatekeeper blocking scripts",id:"problem-gatekeeper-blocking-scripts",level:4},{value:"Problem: Homebrew not found",id:"problem-homebrew-not-found",level:4},{value:"Linux Issues",id:"linux-issues",level:3},{value:"Problem: Missing dependencies",id:"problem-missing-dependencies",level:4},{value:"Problem: SELinux blocking file operations",id:"problem-selinux-blocking-file-operations",level:4},{value:"Windows Issues",id:"windows-issues",level:3},{value:"Problem: PowerShell execution policy",id:"problem-powershell-execution-policy",level:4},{value:"Problem: WSL vs native Windows paths",id:"problem-wsl-vs-native-windows-paths",level:4},{value:"Tool-Specific Issues",id:"tool-specific-issues",level:2},{value:"Claude Code Integration",id:"claude-code-integration",level:3},{value:"Problem: Claude Code not recognizing agent files",id:"problem-claude-code-not-recognizing-agent-files",level:4},{value:"Cursor Integration",id:"cursor-integration",level:3},{value:"Problem: Cursor not using CyberArk Agentic Spec Driven Development standards",id:"problem-cursor-not-using-cyberark-agentic-spec-driven-development-standards",level:4},{value:"Verification and Diagnostics",id:"verification-and-diagnostics",level:2},{value:"Installation Health Check",id:"installation-health-check",level:3},{value:"Log Analysis",id:"log-analysis",level:3},{value:"Getting Additional Help",id:"getting-additional-help",level:2},{value:"Community Support",id:"community-support",level:3},{value:"Information to Include in Bug Reports",id:"information-to-include-in-bug-reports",level:3},{value:"Clean Reinstall Process",id:"clean-reinstall-process",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"installation-troubleshooting",children:"Installation Troubleshooting"})}),"\n",(0,o.jsx)(n.p,{children:"Having issues with your CyberArk Agentic Spec Driven Development installation? This guide covers common problems and their solutions."}),"\n",(0,o.jsx)(n.h2,{id:"common-installation-issues",children:"Common Installation Issues"}),"\n",(0,o.jsx)(n.h3,{id:"permission-errors",children:"Permission Errors"}),"\n",(0,o.jsxs)(n.h4,{id:"problem-permission-denied-when-running-installation-scripts",children:["Problem: ",(0,o.jsx)(n.code,{children:"Permission denied"})," when running installation scripts"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Error message example\nbash: ./setup.sh: Permission denied\n"})}),"\n",(0,o.jsx)(n.h4,{id:"solutions",children:"Solutions:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Option 1: Make script executable"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"chmod +x ~/.cyberark-spec-os/setup/project.sh\nchmod +x ~/.cyberark-spec-os/setup/base.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Option 2: Run with bash directly"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"bash ~/.cyberark-spec-os/setup/project.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Option 3: Check file ownership"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check current ownership\nls -la ~/.agent-os/setup/\n\n# Fix ownership if needed\nsudo chown -R $USER:$USER ~/.cyberark-spec-os/\n"})}),"\n",(0,o.jsx)(n.h3,{id:"network-and-download-issues",children:"Network and Download Issues"}),"\n",(0,o.jsxs)(n.h4,{id:"problem-curl-command-not-found-or-download-failures",children:["Problem: ",(0,o.jsx)(n.code,{children:"curl: command not found"})," or download failures"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Install curl:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"macOS:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Using Homebrew\nbrew install curl\n\n# Using MacPorts\nsudo port install curl\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Linux (Ubuntu/Debian):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update\nsudo apt-get install curl\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Linux (CentOS/RHEL):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo yum install curl\n# or for newer versions\nsudo dnf install curl\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Windows:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Install via Chocolatey\nchoco install curl\n\n# Or use PowerShell\'s Invoke-WebRequest instead\nInvoke-WebRequest -Uri "https://example.com/file" -OutFile "file"\n'})}),"\n",(0,o.jsx)(n.h4,{id:"problem-ssl-certificate-verification-fails",children:"Problem: SSL certificate verification fails"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Temporary solution (not recommended for production)\ncurl -k -sSL https://url...\n\n# Better solution: Update certificates\n# macOS\nbrew install ca-certificates\n\n# Linux\nsudo apt-get update && sudo apt-get install ca-certificates\n"})}),"\n",(0,o.jsx)(n.h4,{id:"problem-github-api-rate-limiting",children:"Problem: GitHub API rate limiting"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Error: API rate limit exceeded\n# Solution: Use authenticated requests\ncurl -H "Authorization: token YOUR_GITHUB_TOKEN" \\\n  https://api.github.com/repos/ChenReuven/cyberark-ai-spec-os/contents/file\n'})}),"\n",(0,o.jsx)(n.h3,{id:"path-and-environment-issues",children:"Path and Environment Issues"}),"\n",(0,o.jsxs)(n.h4,{id:"problem-cyberark-spec-os-not-found-or-path-issues",children:["Problem: ",(0,o.jsx)(n.code,{children:"~/.cyberark-spec-os"})," not found or path issues"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Check if directory exists:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ls -la ~/\nls -la ~/.cyberark-spec-os/\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Verify home directory:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"echo $HOME\ncd ~\npwd\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Create missing directories:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"mkdir -p ~/.cyberark-spec-os/standards/code-style\nmkdir -p ~/.cyberark-spec-os/instructions/core\nmkdir -p ~/.cyberark-spec-os/commands\n"})}),"\n",(0,o.jsx)(n.h4,{id:"problem-command-not-found-after-installation",children:"Problem: Command not found after installation"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Add to PATH:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Bash (.bashrc or .bash_profile):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"echo 'export PATH=\"$HOME/.cyberark-spec-os/bin:$PATH\"' >> ~/.bashrc\nsource ~/.bashrc\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Zsh (.zshrc):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"echo 'export PATH=\"$HOME/.cyberark-spec-os/bin:$PATH\"' >> ~/.zshrc\nsource ~/.zshrc\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Fish (.config/fish/config.fish):"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"echo 'set -gx PATH $HOME/.cyberark-spec-os/bin $PATH' >> ~/.config/fish/config.fish\n"})}),"\n",(0,o.jsx)(n.h3,{id:"git-and-repository-issues",children:"Git and Repository Issues"}),"\n",(0,o.jsx)(n.h4,{id:"problem-git-not-installed-or-configured",children:"Problem: Git not installed or configured"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Install Git:"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"macOS:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Using Homebrew\nbrew install git\n\n# Using Xcode Command Line Tools\nxcode-select --install\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Linux:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Ubuntu/Debian\nsudo apt-get install git\n\n# CentOS/RHEL\nsudo yum install git\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Configure Git:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'git config --global user.name "Your Name"\ngit config --global user.email "your.email@example.com"\n'})}),"\n",(0,o.jsx)(n.h4,{id:"problem-repository-access-issues",children:"Problem: Repository access issues"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Test repository access\ngit ls-remote https://github.com/ChenReuven/cyberark-ai-spec-os.git\n\n# If SSH issues, use HTTPS instead\ngit clone https://github.com/ChenReuven/cyberark-ai-spec-os.git\n"})}),"\n",(0,o.jsx)(n.h3,{id:"file-system-issues",children:"File System Issues"}),"\n",(0,o.jsx)(n.h4,{id:"problem-disk-space-insufficient",children:"Problem: Disk space insufficient"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Check available space:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"df -h ~\ndu -sh ~/.cyberark-spec-os/\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Clean up if needed:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Remove old backups\nrm -rf ~/.cyberark-spec-os/*.backup.*\n\n# Clear temporary files\nrm -rf ~/.cyberark-spec-os/tmp/\n"})}),"\n",(0,o.jsx)(n.h4,{id:"problem-file-conflicts-or-corruption",children:"Problem: File conflicts or corruption"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Reset installation:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Backup current config\ncp ~/.cyberark-spec-os/config.yml ~/config.yml.backup\n\n# Remove and reinstall\nrm -rf ~/.cyberark-spec-os/\n# Re-run installation\n\n# Restore config\ncp ~/config.yml.backup ~/.cyberark-spec-os/config.yml\n"})}),"\n",(0,o.jsx)(n.h2,{id:"platform-specific-issues",children:"Platform-Specific Issues"}),"\n",(0,o.jsx)(n.h3,{id:"macos-issues",children:"macOS Issues"}),"\n",(0,o.jsx)(n.h4,{id:"problem-gatekeeper-blocking-scripts",children:"Problem: Gatekeeper blocking scripts"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Allow script execution\nsudo spctl --master-disable\n\n# Or allow specific script\nsudo xattr -r -d com.apple.quarantine ~/.cyberark-spec-os/setup/\n"})}),"\n",(0,o.jsx)(n.h4,{id:"problem-homebrew-not-found",children:"Problem: Homebrew not found"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Install Homebrew\n/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n\n# Add to PATH\necho \'eval "$(/opt/homebrew/bin/brew shellenv)"\' >> ~/.zprofile\neval "$(/opt/homebrew/bin/brew shellenv)"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"linux-issues",children:"Linux Issues"}),"\n",(0,o.jsx)(n.h4,{id:"problem-missing-dependencies",children:"Problem: Missing dependencies"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ubuntu/Debian:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo apt-get update\nsudo apt-get install build-essential curl git\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"CentOS/RHEL:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'sudo yum groupinstall "Development Tools"\nsudo yum install curl git\n'})}),"\n",(0,o.jsx)(n.h4,{id:"problem-selinux-blocking-file-operations",children:"Problem: SELinux blocking file operations"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Check SELinux status\nsestatus\n\n# Temporarily disable (not recommended for production)\nsudo setenforce 0\n\n# Or set proper contexts\nsudo setsebool -P httpd_can_network_connect 1\n"})}),"\n",(0,o.jsx)(n.h3,{id:"windows-issues",children:"Windows Issues"}),"\n",(0,o.jsx)(n.h4,{id:"problem-powershell-execution-policy",children:"Problem: PowerShell execution policy"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-powershell",children:"# Check current policy\nGet-ExecutionPolicy\n\n# Allow script execution (run as Administrator)\nSet-ExecutionPolicy RemoteSigned -Scope LocalMachine\n"})}),"\n",(0,o.jsx)(n.h4,{id:"problem-wsl-vs-native-windows-paths",children:"Problem: WSL vs native Windows paths"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"In WSL:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Use Linux-style paths\n~/.agent-os/\n\n# Access Windows files\n/mnt/c/Users/username/\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"In native Windows:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-cmd",children:"# Use Windows-style paths\n%USERPROFILE%\\.agent-os\\\n"})}),"\n",(0,o.jsx)(n.h2,{id:"tool-specific-issues",children:"Tool-Specific Issues"}),"\n",(0,o.jsx)(n.h3,{id:"claude-code-integration",children:"Claude Code Integration"}),"\n",(0,o.jsx)(n.h4,{id:"problem-claude-code-not-recognizing-agent-files",children:"Problem: Claude Code not recognizing agent files"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Check file locations:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ls -la ~/.cyberark-spec-os/claude-code/agents/\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Verify file format:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Files should be markdown (.md)\nfile ~/.cyberark-spec-os/claude-code/agents/context-fetcher.md\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Restart Claude Code"})," after installation."]}),"\n",(0,o.jsx)(n.h3,{id:"cursor-integration",children:"Cursor Integration"}),"\n",(0,o.jsx)(n.h4,{id:"problem-cursor-not-using-cyberark-agentic-spec-driven-development-standards",children:"Problem: Cursor not using CyberArk Agentic Spec Driven Development standards"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Check project configuration:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ls -la .cyberark-spec-os/\ncat .cyberark-spec-os/config.yml\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Verify standards files:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"ls -la .cyberark-spec-os/standards/\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Restart Cursor"})," and reload the project."]}),"\n",(0,o.jsx)(n.h2,{id:"verification-and-diagnostics",children:"Verification and Diagnostics"}),"\n",(0,o.jsx)(n.h3,{id:"installation-health-check",children:"Installation Health Check"}),"\n",(0,o.jsx)(n.p,{children:"Create a diagnostic script:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# health-check.sh\n\necho "\ud83d\udd0d CyberArk Agentic Spec Driven Development Health Check"\necho "=================================="\n\n# Check base installation\nif [ -d ~/.cyberark-spec-os ]; then\n    echo "\u2705 Base installation found"\n    echo "\ud83d\udcc1 Location: ~/.cyberark-spec-os"\n    \n    # Check key directories\n    for dir in standards instructions commands; do\n        if [ -d ~/.cyberark-spec-os/$dir ]; then\n            echo "\u2705 $dir directory exists"\n            echo "   Files: $(ls ~/.cyberark-spec-os/$dir | wc -l)"\n        else\n            echo "\u274c $dir directory missing"\n        fi\n    done\n    \n    # Check config\n    if [ -f ~/.cyberark-spec-os/config.yml ]; then\n        echo "\u2705 Configuration file found"\n        echo "   Version: $(grep version ~/.cyberark-spec-os/config.yml | cut -d\' \' -f2)"\n    else\n        echo "\u274c Configuration file missing"\n    fi\nelse\n    echo "\u274c Base installation not found"\n    echo "   Run: curl -sSL https://install-url | bash"\nfi\n\n# Check project installation (if in a project)\nif [ -d .cyberark-spec-os ]; then\n    echo "\u2705 Project installation found"\n    echo "\ud83d\udcc1 Location: ./.cyberark-spec-os"\n    \n    for dir in product specs standards; do\n        if [ -d .cyberark-spec-os/$dir ]; then\n            echo "\u2705 $dir directory exists"\n        else\n            echo "\u274c $dir directory missing"\n        fi\n    done\nelse\n    echo "\u2139\ufe0f  No project installation in current directory"\n    echo "   Run: ~/.cyberark-spec-os/setup/project.sh"\nfi\n\n# Check tools\necho ""\necho "\ud83d\udee0\ufe0f  Tool Status"\necho "==============="\n\n# Check common tools\nfor tool in git curl node npm; do\n    if command -v $tool &> /dev/null; then\n        version=$(${tool} --version 2>/dev/null | head -n1)\n        echo "\u2705 $tool: $version"\n    else\n        echo "\u274c $tool: not installed"\n    fi\ndone\n\necho ""\necho "Health check complete!"\n'})}),"\n",(0,o.jsx)(n.p,{children:"Run the health check:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"chmod +x health-check.sh\n./health-check.sh\n"})}),"\n",(0,o.jsx)(n.h3,{id:"log-analysis",children:"Log Analysis"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Check installation logs:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Look for installation logs\nls -la ~/.cyberark-spec-os/*.log\n\n# Check system logs\n# macOS\nlog show --predicate \'subsystem contains "agent-os"\' --last 1h\n\n# Linux\njournalctl -u agent-os --since "1 hour ago"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"getting-additional-help",children:"Getting Additional Help"}),"\n",(0,o.jsx)(n.h3,{id:"community-support",children:"Community Support"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,o.jsx)(n.a,{href:"https://github.com/ChenReuven/cyberark-ai-spec-os/issues",children:"Report bugs"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Discussions"}),": ",(0,o.jsx)(n.a,{href:"https://github.com/ChenReuven/cyberark-ai-spec-os/discussions",children:"Community discussions"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Documentation"}),": ",(0,o.jsx)(n.a,{href:"https://cyberark-ai-spec-os.github.io",children:"Full documentation"})]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"information-to-include-in-bug-reports",children:"Information to Include in Bug Reports"}),"\n",(0,o.jsx)(n.p,{children:"When reporting installation issues, include:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# System information\nuname -a\necho "Shell: $SHELL"\necho "Home: $HOME"\n\n# CyberArk Agentic Spec Driven Development information\ncat ~/.cyberark-spec-os/config.yml 2>/dev/null || echo "No config found"\n\n# Tool versions\ngit --version\ncurl --version\nnode --version 2>/dev/null || echo "Node not installed"\n\n# Directory structure\nls -la ~/.cyberark-spec-os/ 2>/dev/null || echo "No base installation"\nls -la .cyberark-spec-os/ 2>/dev/null || echo "No project installation"\n\n# Error messages\n# Include the exact error message and command that caused it\n'})}),"\n",(0,o.jsx)(n.h3,{id:"clean-reinstall-process",children:"Clean Reinstall Process"}),"\n",(0,o.jsx)(n.p,{children:"If all else fails, perform a clean reinstall:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# 1. Backup any customizations\ncp -r ~/.cyberark-spec-os/standards ~/.cyberark-spec-os-backup/ 2>/dev/null || true\n\n# 2. Remove current installation\nrm -rf ~/.cyberark-spec-os/\n\n# 3. Clear any cached data\nrm -rf ~/.cache/cyberark-spec-os/ 2>/dev/null || true\n\n# 4. Reinstall base\ncurl -sSL https://raw.githubusercontent.com/ChenReuven/cyberark-ai-spec-os/master/setup/base.sh | bash -s -- --claude-code --cursor\n\n# 5. Restore customizations\ncp -r ~/.cyberark-spec-os-backup/* ~/.cyberark-spec-os/standards/ 2>/dev/null || true\n\n# 6. Reinstall project (from project directory)\n~/.cyberark-spec-os/setup/project.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"This should resolve most installation issues. If problems persist, please reach out to the community for additional support."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);